{"version":3,"sources":["js/components/ProfileStatsItem.js","js/components/ProfileStats.js","js/setAltAvatar.js","js/components/Profile.js","js/components/StatisticItem.js","js/hexColorGen.js","js/components/StatisticsList.js","js/components/FriendListItem.js","js/components/FriendList.js","js/components/TransactionItem.js","js/components/TransactionHistory.js","App.js","index.js"],"names":["ListItem","styled","li","Label","span","Quantity","ProfileStatsItem","label","quantity","defaultProps","List","ul","ProfileStats","stats","Object","entries","map","entry","index","key","setAltAvatar","selector","img","document","querySelector","setAttribute","dataset","src","StyledProfile","div","Wrapper","Description","Name","p","P","Img","Profile","name","tag","location","avatar","noAvatar","onError","data-src","alt","className","props","color","Span","Percentage","StatisticItem","percentage","hexColorGen","Math","random","toString","substr","Section","section","Title","h2","titleText","Statistics","statistics","title","id","Status","isOnline","FriendListItem","data-id","FriendList","friends","Tr","tr","Data","td","Type","Currency","TransactionItem","type","amount","currency","Table","table","Th","th","TransactionHistory","transactions","App","user","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5612efaa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ListItem = styled.li`\n  flex-basis: 33%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 74px;\n\n  &:not(:last-child) {\n    border-right: 1px solid #e4e9f0;\n  }\n`;\nconst Label = styled.span`\n  color: #768696;\n  font-size: 12px;\n  line-height: 1.5;\n  text-transform: capitalize;\n`;\nconst Quantity = styled.span`\n  color: #1f3349;\n  font-weight: 700;\n  line-height: 1.5;\n`;\n\nconst ProfileStatsItem = ({ label, quantity }) => (\n  <ListItem>\n    <Label>{label}</Label>\n    <Quantity>{quantity}</Quantity>\n  </ListItem>\n);\n\nProfileStatsItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  quantity: PropTypes.number,\n};\nProfileStatsItem.defaultProps = {\n  quantity: 0,\n};\n\nexport default ProfileStatsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileStatsItem from './ProfileStatsItem';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  border: 1px solid #e4e9f0;\n  background-color: #f3f6f9;\n  display: flex;\n  justify-content: space-between;\n  padding: 0;\n  margin: 0;\n  height: 100%;\n`;\n\nconst ProfileStats = ({ stats }) => (\n  <List>\n    {Object.entries(stats).map((entry, index) => (\n      <ProfileStatsItem key={index} label={entry[0]} quantity={entry[1]} />\n    ))}\n  </List>\n);\n\nProfileStats.propTypes = {\n  stats: PropTypes.object.isRequired,\n};\n\nexport default ProfileStats;\n","const setAltAvatar = (selector) => {\n  const img = document.querySelector(selector);\n  img.setAttribute('src', img.dataset.src);\n};\n\nexport default setAltAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileStats from './ProfileStats';\nimport setAltAvatar from '../setAltAvatar';\nimport styled from 'styled-components';\n\nconst StyledProfile = styled.div`\n  background-color: #e7ecf2;\n  min-height: 504px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Wrapper = styled.div`\n  min-height: 330px;\n  min-width: 250px;\n  box-shadow: 0 1px 3px rgba(191, 205, 222, 0.75);\n`;\nconst Description = styled.div`\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 256px;\n`;\nconst Name = styled.p`\n  color: #122236;\n  font-size: 18px;\n  font-weight: 700;\n`;\nconst P = styled.p`\n  color: #768696;\n`;\nconst Img = styled.img`\n  height: 128px;\n  width: 128px;\n  border-radius: 50%;\n  margin-bottom: 10px;\n`;\n\nconst Profile = ({ name, tag, location, avatar, stats, noAvatar }) => {\n  return (\n    <StyledProfile>\n      <Wrapper>\n        <Description>\n          <Img\n            onError={() => {\n              setAltAvatar('.profile-avatar');\n            }}\n            src={avatar}\n            data-src={noAvatar}\n            alt=\"avatar\"\n            className=\"profile-avatar\"\n          />\n          <Name>{name}</Name>\n          <P>@{tag}</P>\n          <P>{location}</P>\n        </Description>\n        <ProfileStats stats={stats} />\n      </Wrapper>\n    </StyledProfile>\n  );\n};\n\nProfile.defaultProps = {\n  tag: '',\n  location: 'Earth',\n};\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.object,\n  noAvatar: PropTypes.string.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: 10px 20px;\n  background-color: ${(props) => props.color};\n`;\nconst Span = styled.label`\n  color: #fff;\n  line-height: 20px;\n`;\nconst Label = styled(Span)`\n  font-size: 12px;\n  font-weight: 300;\n  letter-spacing: 0.3px;\n  margin-bottom: 4px;\n`;\nconst Percentage = styled(Span)`\n  font-size: 18px;\n  letter-spacing: 0.45px;\n`;\n\nconst StatisticItem = ({ label, percentage, color }) => (\n  <ListItem color={color}>\n    <Label>{label}</Label>\n    <Percentage>{percentage}%</Percentage>\n  </ListItem>\n);\n\nStatisticItem.defaultProps = { label: '', percentage: 0 };\nStatisticItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default StatisticItem;\n","const hexColorGen = () => '#' + Math.random().toString(16).substr(-6);\nexport default hexColorGen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport StatisticItem from './StatisticItem';\nimport hexColorGen from '../hexColorGen';\n\nconst Section = styled.section`\n  background-color: #f0f3f6;\n  min-height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Wrapper = styled.div`\n  max-width: 60%;\n  box-shadow: 0 2px 2px rgba(2, 2, 2, 0.02);\n  background-color: #fff;\n  margin: 0 auto;\n`;\nconst Title = styled.h2`\n  display: ${(props) => (props.titleText ? 'flex' : 'none')};\n  color: #475965;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\nconst List = styled.ul`\n  display: flex;\n  width: 100%;\n`;\n\nconst Statistics = ({ statistics, title }) => (\n  <Section>\n    <Wrapper>\n      <Title titleText={title}>{title}</Title>\n      <List>\n        {statistics.map(({ label, percentage, id }) => (\n          <StatisticItem\n            label={label}\n            percentage={percentage}\n            key={id}\n            color={hexColorGen()}\n          />\n        ))}\n      </List>\n    </Wrapper>\n  </Section>\n);\n\nStatistics.propTypes = {\n  statistics: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport setAltAvatar from '../setAltAvatar';\nimport styled from 'styled-components';\n\nconst ListItem = styled.li`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 9px 2px rgba(0, 0, 0, 0.75);\n  width: 33%;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nconst Status = styled.span`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 20px;\n  background-color: ${(props) => (props.isOnline ? '#23bf4a' : '#f3434a')};\n`;\nconst Img = styled.img`\n  height: 128px;\n  width: 128px;\n  border-radius: 8px;\n  margin-right: 20px;\n  background-size: contain;\n`;\nconst Name = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nconst FriendListItem = ({ avatar, isOnline, name, noAvatar, id }) => (\n  <ListItem>\n    <Status isOnline={isOnline} />\n    <Img\n      onError={() => {\n        setAltAvatar(`.friend-avatar[data-id='${id}']`);\n      }}\n      src={avatar}\n      data-src={noAvatar}\n      data-id={id}\n      alt=\"avatar\"\n      className=\"friend-avatar\"\n    />\n    <Name>{name}</Name>\n  </ListItem>\n);\n\nFriendListItem.defaultProps = {\n  isOnline: false,\n  name: '',\n};\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  isOnline: PropTypes.bool,\n  name: PropTypes.string,\n  noAvatar: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport FriendsListItem from './FriendListItem';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst FriendList = ({ friends, noAvatar }) => (\n  <List>\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <FriendsListItem\n        avatar={avatar}\n        name={name}\n        isOnline={isOnline}\n        key={id}\n        id={id}\n        noAvatar={noAvatar}\n      />\n    ))}\n  </List>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object).isRequired,\n  noAvatar: PropTypes.string.isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Tr = styled.tr`\n  color: #5c6975;\n  font-size: 15px;\n  font-weight: 300;\n  line-height: 30px;\n  letter-spacing: 0.45px;\n  &:nth-child(even) {\n    background-color: #ecf2f3;\n`;\nconst Data = styled.td`\n  color: #5c6975;\n  font-size: 15px;\n  font-weight: 300;\n  line-height: 30px;\n  letter-spacing: 0.45px;\n  padding: 10px;\n  text-align: center;\n  border: 2px solid #e0e6e7;\n`;\nconst Type = styled(Data)`\n  text-transform: capitalize;\n`;\nconst Currency = styled(Data)`\n  text-transform: uppercase;\n`;\n\nconst TransactionItem = ({ type, amount, currency }) => (\n  <Tr>\n    <Type>{type}</Type>\n    <Data>{amount}</Data>\n    <Currency>{currency}</Currency>\n  </Tr>\n);\n\nTransactionItem.defaultProps = {\n  type: '',\n  amount: 0,\n  currency: '',\n};\nTransactionItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionItem from './TransactionItem';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  min-width: 872px;\n  margin: 0 auto;\n  border-collapse: collapse;\n`;\nconst Th = styled.th`\n  color: #fff;\n  font-size: 13px;\n  font-weight: 700;\n  line-height: 30px;\n  text-transform: uppercase;\n  letter-spacing: 1.17px;\n  background-color: #00bcd4;\n  border: 2px solid #e0e6e7;\n  padding: 12px;\n`;\n\nconst TransactionHistory = ({ transactions }) => (\n  <Table>\n    <thead>\n      <tr>\n        <Th>Type</Th>\n        <Th>Amount</Th>\n        <Th>Currency</Th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {transactions.map(({ id, type, amount, currency }) => (\n        <TransactionItem\n          key={id}\n          type={type}\n          amount={amount}\n          currency={currency}\n        />\n      ))}\n    </tbody>\n  </Table>\n);\n\nTransactionHistory.propTypes = { transactions: PropTypes.array.isRequired };\nexport default TransactionHistory;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport Profile from './js/components/Profile';\nimport Statistics from './js/components/StatisticsList';\nimport Friends from './js/components/FriendList';\nimport Transactions from './js/components/TransactionHistory';\n\nconst App = ({ user, statistics, friends, transactions, noAvatar }) => {\n  const { name, tag, location, avatar, stats } = user;\n  return (\n    <div>\n      <Profile\n        name={name}\n        tag={tag}\n        location={location}\n        avatar={avatar}\n        stats={stats}\n        noAvatar={noAvatar}\n      />\n      <Statistics title=\"Upload stats\" statistics={statistics} />\n      <Friends friends={friends} noAvatar={noAvatar} />\n      <Transactions transactions={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n\nApp.propTypes = {\n  friends: PropTypes.arrayOf(object).isRequired,\n  statistics: PropTypes.arrayOf(object).isRequired,\n  transactions: PropTypes.arrayOf(object).isRequired,\n  user: PropTypes.object.isRequired,\n  noAvatar: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport user from './db/user.json';\nimport statistics from './db/statistical-data.json';\nimport friends from './db/friends.json';\nimport transactions from './db/transactions.json';\nimport './css/base.css';\nconst NO_IMAGE_URL =\n  'https://dummyimage.com/128x128/0015ff/fff.jpg&text=no+avatar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App\n      user={user}\n      statistics={statistics}\n      friends={friends}\n      transactions={transactions}\n      noAvatar={NO_IMAGE_URL}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}