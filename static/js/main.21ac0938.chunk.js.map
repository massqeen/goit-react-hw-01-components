{"version":3,"sources":["components/Stats/Stats.module.css","components/Profile/Profile.module.css","components/FriendListItem/FriendListItem.module.css","components/StatisticsList/StatisticsList.module.css","components/TransactionItem/TransactionItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/default.jpg","components/StatisticItem/StatisticItem.module.css","components/FriendList/FriendList.module.css","components/Stats/Stats.js","components/Profile/Profile.js","components/HexColorGen.js","components/StatisticItem/StatisticItem.js","components/StatisticsList/StatisticsList.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionItem/TransactionItem.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Stats","followers","views","likes","className","styles","stats","item","label","quantity","defaultProps","Profile","name","tag","location","avatar","profile","profileWrapper","description","src","alt","width","img","HexColorGen","Math","random","toString","substr","StatisticItem","percentage","style","backgroundColor","Statistics","statistics","title","wrapper","console","log","list","map","statistic","key","id","FriendListItem","isOnline","statusClass","online","offline","FriendList","friends","friendList","friend","TransactionItem","type","amount","currency","row","data","TransactionHistory","transactions","transactionHistory","header","transaction","App","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21ac0938.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__1v6Io\",\"item\":\"Stats_item__24Qa_\",\"label\":\"Stats_label__3hvJq\",\"quantity\":\"Stats_quantity__2JrXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2Zoyb\",\"profileWrapper\":\"Profile_profileWrapper__2NTzz\",\"description\":\"Profile_description__3EeGm\",\"avatar\":\"Profile_avatar__21zBl\",\"name\":\"Profile_name__oKamd\",\"tag\":\"Profile_tag__1U_r-\",\"location\":\"Profile_location__1KGJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2PKwF\",\"status\":\"FriendListItem_status__10iyn\",\"offline\":\"FriendListItem_offline__3EnS9 FriendListItem_status__10iyn\",\"online\":\"FriendListItem_online__182lc FriendListItem_status__10iyn\",\"avatar\":\"FriendListItem_avatar__3R5QV\",\"name\":\"FriendListItem_name__2CTFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"StatisticsList_statistics__2OlcN\",\"wrapper\":\"StatisticsList_wrapper__gE0Tb\",\"title\":\"StatisticsList_title__2qhZ4\",\"list\":\"StatisticsList_list__3-xtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"TransactionItem_row__1kS8a\",\"data\":\"TransactionItem_data__KX2lT\",\"type\":\"TransactionItem_type__1-54n TransactionItem_data__KX2lT\",\"currency\":\"TransactionItem_currency__2XBov TransactionItem_data__KX2lT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__12VoF\",\"header\":\"TransactionHistory_header__3qHLw\"};","module.exports = __webpack_public_path__ + \"static/media/default.440b9b23.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticItem_item__Q2TTo\",\"label\":\"StatisticItem_label__2r4R_\",\"percentage\":\"StatisticItem_percentage__2ofTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1hP51\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Stats.module.css';\r\n\r\nconst Stats = ({ followers, views, likes }) => (\r\n  <ul className={styles.stats}>\r\n    <li className={styles.item}>\r\n      <span className={styles.label}>Followers</span>\r\n      <span className={styles.quantity}>{followers}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      <span className={styles.label}>Views</span>\r\n      <span className={styles.quantity}>{views}</span>\r\n    </li>\r\n    <li className={styles.item}>\r\n      <span className={styles.label}>Likes</span>\r\n      <span className={styles.quantity}>{likes}</span>\r\n    </li>\r\n  </ul>\r\n);\r\nStats.defaultProps = {\r\n  followers: 0,\r\n  views: 0,\r\n  likes: 0\r\n};\r\n\r\nStats.propTypes = {\r\n  followers: PropTypes.number,\r\n  likes: PropTypes.number,\r\n  views: PropTypes.number\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\nimport Stats from '../Stats/Stats';\r\nimport img from '../default.jpg';\r\n\r\nconst Profile = ({name, tag, location, avatar, stats}) => {\r\n    return (\r\n        <div className={styles.profile} >\r\n            <div className={styles.profileWrapper}>\r\n                <div className={styles.description}>\r\n                    <img src={avatar} alt=\"user avatar\" className={styles.avatar} width=\"128\"/>\r\n                    <p className={styles.name}>{name}</p>\r\n                    <p className={styles.tag}>@{tag}</p>\r\n                    <p className={styles.location}>{location}</p>\r\n                </div>\r\n                <Stats\r\n                    followers={stats.followers}\r\n                    likes={stats.likes}\r\n                    views={stats.views}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nProfile.defaultProps = {\r\n    tag: '',\r\n    location: '',\r\n    avatar: img\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.object\r\n};\r\n\r\nexport default Profile;\r\n","const HexColorGen = () => '#' + Math.random().toString(16).substr(-6);\r\nexport default HexColorGen;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './StatisticItem.module.css'\r\nimport HexColorGen from \"../HexColorGen\";\r\n\r\nconst StatisticItem = ({label, percentage}) => (\r\n    <li className={styles.item} style={{backgroundColor: HexColorGen()}}>\r\n        <span className={styles.label}>{label}</span>\r\n        <span className={styles.percentage}>{percentage}%</span>\r\n    </li>\r\n);\r\n\r\nStatisticItem.defaultProps = {label: '', percentage: 0};\r\nStatisticItem.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './StatisticsList.module.css'\r\nimport StatisticItem from '../StatisticItem/StatisticItem';\r\n\r\nconst Statistics = ({statistics, title}) => (\r\n    <section className={styles.statistics}>\r\n        <div className={styles.wrapper}>\r\n            {title && <h2 className={styles.title}>{title}</h2>}\r\n            {console.log(title)}\r\n            <ul className={styles.list}>\r\n                {statistics.map((statistic) => (\r\n                    <StatisticItem\r\n                        label={statistic.label}\r\n                        percentage={statistic.percentage}\r\n                        key={statistic.id}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nStatistics.propTypes = {statistics: PropTypes.array.isRequired};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css'\r\nimport img from '../default.jpg';\r\n\r\nconst FriendListItem = ({avatar, name, isOnline, id}) => {\r\n    const statusClass = isOnline ? styles.online : styles.offline;\r\n    return (<li className={styles.item} key={id}>\r\n        <span className={statusClass}> </span>\r\n        <img className={styles.avatar} src={avatar} alt={name} width=\"96\"/>\r\n        <p className={styles.name}>{name}</p>\r\n    </li>)\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n    avatar: img,\r\n    isOnline: false,\r\n    name: ''\r\n};\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css'\r\nimport FriendsListItem from '../FriendListItem/FriendListItem';\r\n\r\nconst FriendList = ({friends}) => (\r\n    <ul className={styles.friendList}>\r\n        {friends.map(friend => (\r\n            <FriendsListItem avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} key={friend.id}/>\r\n        ))\r\n        }\r\n    </ul>\r\n);\r\n\r\nFriendList.propTypes = {friends: PropTypes.array.isRequired};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionItem.module.css';\r\n\r\nconst TransactionItem = ({type, amount, currency}) => (\r\n    <tr className={styles.row}>\r\n        <td className={styles.type}>{type}</td>\r\n        <td className={styles.data}>{amount}</td>\r\n        <td className={styles.currency}>{currency}</td>\r\n    </tr>\r\n)\r\n\r\nTransactionItem.defaultProps = {\r\n    type: '',\r\n    amount: 0,\r\n    currency: ''\r\n}\r\nTransactionItem.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default TransactionItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionItem from '../TransactionItem/TransactionItem';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({transactions}) => (\r\n    <table className={styles.transactionHistory}>\r\n        <thead>\r\n        <tr>\r\n            <th className={styles.header}>Type</th>\r\n            <th className={styles.header}>Amount</th>\r\n            <th className={styles.header}>Currency</th>\r\n        </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        {transactions.map(transaction => (\r\n                <TransactionItem\r\n                    key={transaction.id}\r\n                    type={transaction.type}\r\n                    amount={transaction.amount}\r\n                    currency={transaction.currency}\r\n                />\r\n            )\r\n        )}\r\n        </tbody>\r\n    </table>\r\n)\r\n\r\nTransactionHistory.propTypes = {transactions: PropTypes.array.isRequired};\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './Profile/Profile';\r\nimport Statistics from './StatisticsList/StatisticsList';\r\nimport Friends from './FriendList/FriendList';\r\nimport Transactions from './TransactionHistory/TransactionHistory';\r\n\r\nconst App = ({user, statistics, friends, transactions}) => {\r\n    return (\r\n        <div>\r\n            <Profile\r\n                name={user.name}\r\n                tag={user.tag}\r\n                location={user.location}\r\n                avatar={user.avatar}\r\n                stats={user.stats}\r\n            />\r\n            <Statistics title='Upload stats' statistics={statistics}/>\r\n            <Friends friends={friends}/>\r\n            <Transactions transactions={transactions}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport App from './components/App';\r\nimport user from './db/user.json';\r\nimport statistics from './db/statistical-data.json';\r\nimport friends from './db/friends.json';\r\nimport transactions from './db/transactions.json';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App user={user} statistics={statistics} friends={friends} transactions={transactions} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}